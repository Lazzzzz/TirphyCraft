package com.laz.tirphycraft.objects.blocks.customBlock.froz.cavePick;

import java.util.Random;

import com.laz.tirphycraft.init.BlockInit;
import com.laz.tirphycraft.objects.base.BlockBase;
import com.laz.tirphycraft.util.interfaces.IHasModel;

import net.minecraft.block.SoundType;
import net.minecraft.block.material.Material;
import net.minecraft.block.state.IBlockState;
import net.minecraft.util.EnumFacing;
import net.minecraft.util.math.BlockPos;
import net.minecraft.world.IBlockAccess;
import net.minecraft.world.World;
import net.minecraftforge.common.IPlantable;

public class BlockFrozCaveMoss extends BlockBase implements IHasModel {
	public BlockFrozCaveMoss() {
		super("froz_cave_moss", Material.ROCK, 1.5F, 15, "pickaxe", 0, SoundType.STONE);

	}

	@Override
	public void onBlockAdded(World world, BlockPos pos, IBlockState state) {
		world.scheduleUpdate(pos, this, this.tickRate(world));

	}

	@Override
	public boolean canPlaceBlockAt(World worldIn, BlockPos pos) {
		return worldIn.getBlockState(pos.up()).isFullCube();
	}

	@Override
	public boolean canSustainPlant(IBlockState state, IBlockAccess world, BlockPos pos, EnumFacing direction,
			IPlantable plantable) {
		// TODO Auto-generated method stub
		return super.canSustainPlant(state, world, pos, direction, plantable);
	}
	
	@Override
	public int tickRate(World worldIn) {
		return 20;
	}
	
	@Override
	public void updateTick(World worldIn, BlockPos pos, IBlockState state, Random rand) {
		if (!worldIn.getBlockState(pos.up()).isFullCube()) {
			worldIn.destroyBlock(pos, true);
		}
		
		worldIn.scheduleUpdate(pos, this, this.tickRate(worldIn));
	}
	
}