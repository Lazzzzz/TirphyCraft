package com.laz.tirphycraft.objects.blocks.customBlock.pick;

import com.laz.tirphycraft.Main;
import com.laz.tirphycraft.objects.base.BlockBase;
import com.laz.tirphycraft.objects.blocks.customBlock.froz.dungeon.enumHandlerBlueBrick;

import net.minecraft.block.SoundType;
import net.minecraft.block.material.Material;
import net.minecraft.block.properties.IProperty;
import net.minecraft.block.properties.PropertyEnum;
import net.minecraft.block.state.BlockStateContainer;
import net.minecraft.block.state.IBlockState;
import net.minecraft.creativetab.CreativeTabs;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.item.Item;
import net.minecraft.item.ItemStack;
import net.minecraft.util.NonNullList;
import net.minecraft.util.math.BlockPos;
import net.minecraft.util.math.RayTraceResult;
import net.minecraft.world.World;

public class BlockStalactite extends Block {
	
	public static final PropertyEnum<enumStalactite.EnumType> VARIANT = PropertyEnum.<enumStalactite.EnumType>create(
			"variant", enumStalactite.EnumType.class);
	
	public BlockStalactite(String name, Material material, float hard, float resist, String type, int i,
			SoundType sound) {
		super(name, material, hard, resist, type, i, sound);
		setDefaultState(this.blockState.getBaseState().withProperty(VARIANT, enumStalactite.EnumType.VARIANT_0));
	}
	

	@Override
	public int damageDropped(IBlockState state) {
		return ((enumStalactite.EnumType) state.getValue(VARIANT)).getMeta();
	}

	@Override
	public int getMetaFromState(IBlockState state) {
		return ((enumStalactite.EnumType) state.getValue(VARIANT)).getMeta();
	}

	@Override
	public IBlockState getStateFromMeta(int meta) {
		return this.getDefaultState().withProperty(VARIANT, enumStalactite.EnumType.byMetadata(meta));
	}

	@Override
	public ItemStack getPickBlock(IBlockState state, RayTraceResult target, World world, BlockPos pos,
			EntityPlayer player) {
		return new ItemStack(Item.getItemFromBlock(this), 1, getMetaFromState(world.getBlockState(pos)));
	}

	@Override
	public void getSubBlocks(CreativeTabs itemIn, NonNullList<ItemStack> items) {
		for (enumStalactite.EnumType variant : enumStalactite.EnumType.values()) {
			items.add(new ItemStack(this, 1, variant.getMeta()));

		}
	}

	@Override
	protected BlockStateContainer createBlockState() {

		return new BlockStateContainer(this, new IProperty[] { VARIANT });
	}

	@Override
	public String getSpecialName(ItemStack stack) {
		return enumStalactite.EnumType.values()[stack.getItemDamage()].getName();

	}

	@Override
	public void registerModels() {
		for (int i = 0; i < enumHandlerBlueBrick.EnumType.values().length; i++) {

			Main.proxy.registerVariantRenderer(Item.getItemFromBlock(this), i,
					"stalactite_" + enumStalactite.EnumType.values()[i].getName(), "inventory");
		}

	}

}

