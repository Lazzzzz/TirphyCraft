package com.laz.tirphycraft.world.biomes.laputa;

import java.util.Random;

import com.laz.tirphycraft.world.gen.generators.pad.WorldGenLightPad;
import com.laz.tirphycraft.world.gen.generators.pick.WorldBlackCrystal;
import com.laz.tirphycraft.world.gen.generators.plants.WorldGenLaputaMagicPlant;
import com.laz.tirphycraft.world.gen.generators.plants.WorldGenLaputaPlant;
import com.laz.tirphycraft.world.gen.generators.trees.laputa.WorldGenGeantTree;
import com.laz.tirphycraft.world.gen.generators.trees.laputa.WorldGenNormalTree;

import net.minecraft.util.math.BlockPos;
import net.minecraft.world.World;

public class BiomeLaputaDecorator {
	
	public final WorldBlackCrystal CRYSTAL_PICK = new WorldBlackCrystal();
	public final WorldGenLightPad LIGHT_PAD = new WorldGenLightPad(3);
	public final WorldGenLaputaPlant LAPUTA_PLANT = new WorldGenLaputaPlant();
	public final WorldGenGeantTree BIG_TREE = new WorldGenGeantTree();
	public final WorldGenNormalTree NORMAL_TREE = new WorldGenNormalTree();
	public final WorldGenLaputaMagicPlant MAGIC_PLANT = new WorldGenLaputaMagicPlant();
	
	public void genDecorator(World worldIn, Random rand, BlockPos pos, int tree, int big_tree, int light_pad, int grass, int flower, int crystal) {

	}
	
	public void genTree(World worldIn, Random rand, BlockPos pos, int tree) {
		int o;
		
		if (tree < 0) {
			for (int i = 0; i < -(tree); i++) {
				int j = rand.nextInt(16) + 8;
				int k = rand.nextInt(16) + 8;
				NORMAL_TREE.generate(worldIn, rand, pos);
			}
		
		} else if (tree != 0) {
			o = rand.nextInt(tree);
			if (o == 0) NORMAL_TREE.generate(worldIn, rand, pos);
		}
	}
	
	public void genBigTree(World worldIn, Random rand, BlockPos pos, int tree) {
		int o;
		
		if (tree < 0) {
			for (int i = 0; i < -(tree); i++) {
				int j = rand.nextInt(16) + 8;
				int k = rand.nextInt(16) + 8;
				BIG_TREE.generate(worldIn, rand, pos);
			}
		
		} else if (tree != 0) {
			o = rand.nextInt(tree);
			if (o == 0) BIG_TREE.generate(worldIn, rand, pos);
		}
	}	

	public void genCrystalPick(World worldIn, Random rand, BlockPos pos, int pick) {
		int o;
		
		if (pick < 0) {
			for (int i = 0; i < -(pick); i++) {
				int j = rand.nextInt(16) + 8;
				int k = rand.nextInt(16) + 8;
				CRYSTAL_PICK.generate(worldIn, rand, pos);
			}
		
		} else if (pick != 0) {
			o = rand.nextInt(pick);
			if (o == 0) CRYSTAL_PICK.generate(worldIn, rand, pos);
		}
	}
}
