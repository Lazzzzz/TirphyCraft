package com.laz.tirphycraft.entity.entityClass.projectile;

import com.laz.tirphycraft.util.Reference;

import net.minecraft.entity.EntityLiving;
import net.minecraft.entity.SharedMonsterAttributes;
import net.minecraft.entity.passive.EntityCow;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.init.Blocks;
import net.minecraft.util.DamageSource;
import net.minecraft.util.EnumHand;
import net.minecraft.util.ResourceLocation;
import net.minecraft.util.SoundEvent;
import net.minecraft.util.math.BlockPos;
import net.minecraft.util.math.MathHelper;
import net.minecraft.world.World;

public class EntityIceBall extends EntityLiving {
	
	public EntityIceBall(World worldIn, double velx, double vely, double velz) {
		super(worldIn);
		this.motionX = velx;
		this.motionY = vely;
		this.motionZ = velz;
		
		
	}
	
	@Override
	public void onLivingUpdate() {
		this.posX += this.motionX;
		this.posY += this.motionY;
		this.posZ += this.motionZ;
		
		this.collideTask();
		
	}
	
	@Override
	protected void doBlockCollisions() {
		// TODO Auto-generated method stub
		super.doBlockCollisions();
	}

	
    public void collideTask()
    {
        if (this.collided)
        {
            int var1 = MathHelper.floor(this.posX);
            int var2 = MathHelper.floor(this.getEntityBoundingBox().minY);
            int var3 = MathHelper.floor(this.posZ);

            if (this.motionX > 0.0D && this.world.getBlockState(new BlockPos(var1 + 1, var2, var3)).getBlock() != Blocks.AIR)
            {
                this.motionX = -this.motionX;
            }
            else if (this.motionX < 0.0D && this.world.getBlockState(new BlockPos(var1 - 1, var2, var3)).getBlock() != Blocks.AIR)
            {
                this.motionX = -this.motionX;
            }

            if (this.motionY > 0.0D && this.world.getBlockState(new BlockPos(var1, var2 + 1, var3)).getBlock() != Blocks.AIR)
            {
                this.motionY = -this.motionY;
            }
            else if (this.motionY < 0.0D && this.world.getBlockState(new BlockPos(var1, var2 - 1, var3)).getBlock() != Blocks.AIR)
            {
                this.motionY = -this.motionY;
            }

            if (this.motionZ > 0.0D && this.world.getBlockState(new BlockPos(var1, var2, var3 + 1)).getBlock() != Blocks.AIR)
            {
                this.motionZ = -this.motionZ;
            }
            else if (this.motionZ < 0.0D && this.world.getBlockState(new BlockPos(var1, var2, var3 - 1)).getBlock() != Blocks.AIR)
            {
                this.motionZ = -this.motionZ;
            }
        }
    }
}	

