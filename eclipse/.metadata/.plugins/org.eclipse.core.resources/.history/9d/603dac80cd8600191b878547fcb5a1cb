package com.laz.tirphycraft.entity.entityClass.projectile;

import net.minecraft.entity.Entity;
import net.minecraft.entity.EntityFlying;
import net.minecraft.entity.EntityLiving;
import net.minecraft.init.Blocks;
import net.minecraft.util.DamageSource;
import net.minecraft.util.math.BlockPos;
import net.minecraft.util.math.MathHelper;
import net.minecraft.util.math.Vec3d;
import net.minecraft.world.World;

public class EntityIceBall extends EntityFlying {
	
	public EntityIceBall(World worldIn) {
		super(worldIn);
		
	}
	
	public void setVel(double velx, double vely, double velz) {
		this.motionX = velx;
		this.motionY = vely;
		this.motionZ = velz;
	}
	
	@Override
	public void onLivingUpdate() {
		
		//this.collideTask();
		super.onLivingUpdate();
		
	}
	
	@Override
	public boolean isEntityInvulnerable(DamageSource source) {
		return true;
	}
	
	@Override
	public boolean hitByEntity(Entity entityIn) {
		Vec3d dir = entityIn.getLookVec();
		this.motionX += dir.x;
		this.motionY += dir.y;
		this.motionZ += dir.z;
		return false;
	}

    public void collideTask()
    {
        if (this.collided)
        {
            int var1 = MathHelper.floor(this.posX);
            int var2 = MathHelper.floor(this.getEntityBoundingBox().minY);
            int var3 = MathHelper.floor(this.posZ);

            if (this.motionX > 0.0D && this.world.getBlockState(new BlockPos(var1 + 1, var2, var3)).getBlock() != Blocks.AIR)
            {
                this.motionX = -this.motionX;
            }
            else if (this.motionX < 0.0D && this.world.getBlockState(new BlockPos(var1 - 1, var2, var3)).getBlock() != Blocks.AIR)
            {
                this.motionX = -this.motionX;
            }

            if (this.motionY > 0.0D && this.world.getBlockState(new BlockPos(var1, var2 + 1, var3)).getBlock() != Blocks.AIR)
            {
                this.motionY = -this.motionY;
            }
            else if (this.motionY < 0.0D && this.world.getBlockState(new BlockPos(var1, var2 - 1, var3)).getBlock() != Blocks.AIR)
            {
                this.motionY = -this.motionY;
            }

            if (this.motionZ > 0.0D && this.world.getBlockState(new BlockPos(var1, var2, var3 + 1)).getBlock() != Blocks.AIR)
            {
                this.motionZ = -this.motionZ;
            }
            else if (this.motionZ < 0.0D && this.world.getBlockState(new BlockPos(var1, var2, var3 - 1)).getBlock() != Blocks.AIR)
            {
                this.motionZ = -this.motionZ;
            }
        }
    }
}	

