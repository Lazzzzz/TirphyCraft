package com.laz.tirphycraft.world.gen.generators.trees.laputa;

import java.util.Random;

import com.laz.tirphycraft.init.BlockInit;

import net.minecraft.block.BlockLeaves;
import net.minecraft.block.state.IBlockState;
import net.minecraft.init.Blocks;
import net.minecraft.util.math.BlockPos;
import net.minecraft.world.World;
import net.minecraft.world.gen.feature.WorldGenAbstractTree;

public class WorldGenStem extends WorldGenAbstractTree {
	private static final IBlockState TRUNK = BlockInit.STEM.getDefaultState();

	public WorldGenStem() {
		super(false);
	}

	public boolean generate(World worldIn, Random rand, BlockPos position) {
		
		if (position.getY() >= 1 && position.getY() + 1 <= 240) {
			int r = rand.nextInt(4)+2;
			generateStem(worldIn, rand, position, r);
			return true;
		}

		return false;
	}
	
	public void generateStem(World worldIn, Random rand, BlockPos position, int nb) {
		int h = rand.nextInt(2+nb) + 3;
		int x = position.getX();
		int y = position.getY();
		int z = position.getZ();
		
		for (int i = 0; i < h; i++) {
			y = position.getY() + i;
			worldIn.setBlockState(new BlockPos(x, y, z), TRUNK);
		}
		
		if (nb > 0) {
			generateStem(worldIn, rand, new BlockPos(x-1, y+h, z-1), nb-1);
			generateStem(worldIn, rand, new BlockPos(x+1, y+h, z-1), nb-1);
			generateStem(worldIn, rand, new BlockPos(x+1, y+h, z+1), nb-1);
			generateStem(worldIn, rand, new BlockPos(x-1, y+h, z+1), nb-1);
		}
		
	}
}