package com.laz.tirphycraft.world.biomes.laputa;

import java.util.Random;

import com.laz.tirphycraft.init.BlockInit;
import com.laz.tirphycraft.world.gen.generators.pad.WorldGenLightPad;
import com.laz.tirphycraft.world.gen.generators.plants.WorldGenLaputaPlant;
import com.laz.tirphycraft.world.gen.generators.trees.laputa.WorldGenGeantTree;
import com.laz.tirphycraft.world.gen.generators.trees.laputa.WorldGenNormalTree;
import com.laz.tirphycraft.world.gen.generators.trees.laputa.WorldGenStem;

import net.minecraft.util.math.BlockPos;
import net.minecraft.world.World;
import net.minecraft.world.biome.Biome;

public class BiomeLaputaNoManLand extends Biome {

	public final WorldGenLightPad LIGHT_PAD = new WorldGenLightPad(3);
	public final WorldGenLaputaPlant LAPUTA_PLANT = new WorldGenLaputaPlant();
	public final WorldGenGeantTree GEANT_TREE = new WorldGenGeantTree();
	public final WorldGenNormalTree NORMAL_TREE = new WorldGenNormalTree();
	public final WorldGenStem STEM = new WorldGenStem();
	
	public BiomeLaputaNoManLand() {

		super(new BiomeProperties("Laputa no man land").setBaseHeight(0.125F).setHeightVariation(0.05F).setTemperature(0.5F)
				.setRainfall(0.0F).setRainDisabled().setWaterColor(1909616));

		topBlock = BlockInit.LAPUTA_GRASS.getDefaultState();
		fillerBlock = BlockInit.LAPUTA_DIRT.getDefaultState();

		this.spawnableMonsterList.clear();
		this.spawnableCreatureList.clear();
		this.spawnableWaterCreatureList.clear();
		this.spawnableCaveCreatureList.clear();

	}
	

	@Override
	public void decorate(World worldIn, Random rand, BlockPos pos) {

		int o = rand.nextInt(4);
		if (o == 1) {
			int j = rand.nextInt(16) + 8;
			int k = rand.nextInt(16) + 8;
			this.LIGHT_PAD.generate(worldIn, rand, worldIn.getHeight(pos.add(j, 0, k)));
		}
		
		for (int i = 0; i < 64; i++) {
			int j = rand.nextInt(16) + 8;
			int k = rand.nextInt(16) + 8;
			this.LAPUTA_PLANT.generate(worldIn, rand, worldIn.getHeight(pos.add(j, 0, k)));
		}
		
		
		for (int i = 0; i < 2; i++) {
			int j = rand.nextInt(16) + 8;
			int k = rand.nextInt(16) + 8;

			this.GEANT_TREE.generate(worldIn, rand, worldIn.getHeight(pos.add(j, 0, k)));
		}
		
		o = rand.nextInt(4);
		if (o==0) {
			int j = rand.nextInt(16) + 8;
			int k = rand.nextInt(16) + 8;

			this.NORMAL_TREE.generate(worldIn, rand, worldIn.getHeight(pos.add(j, 0, k)));
		}
		
		int j = rand.nextInt(16) + 8;
		int k = rand.nextInt(16) + 8;

		this.STEM.generate(worldIn, rand, worldIn.getHeight(pos.add(j, 0, k)));
		}
		
	}

}
